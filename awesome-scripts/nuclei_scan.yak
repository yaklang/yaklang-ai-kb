yakit.AutoInitYakit()
host, port := tcp.MockServe("TETSSDFSDFSDF")
target = str.HostPort(host, port)

var nucleiPluginNames = [] // ["[wordpress-plugins-lifterlms]: WordPress Plugin lifterlms Listing"]// ["[wordpress-plugins-lifterlms]: WordPress Plugin lifterlms Listing"]
var nonNucleiPluginNames = [] // ["ThinkPHP RCE 被动扫描"]

wg = sync.NewWaitGroup()
wg.Add(2)

go func {
    defer func {
        wg.Done()
    }

    try {
        if nucleiPluginNames.Length() > 0 {
            for pocVul in nuclei.Scan(target, nuclei.templates(nucleiPluginNames...), nuclei.debug(true),
                                      poc.https(str.IsTLSServer(target)~))~ {
                yakit.Output(pocVul)
                yakit.Output(nuclei.PocVulToRisk(pocVul))
            }

        }

    } catch err {
        yakit.Info("httptpl templates scan failed: %s", err)
    }
}


go func {
    defer func {
        wg.Done()
    }

    try {
        caller = hook.NewMixPluginCaller()~
        nonNucleiPluginNames.Map(i => {
            yakit.Info("开始加载插件:[%v]", i)
            caller.LoadPlugin(i)
        })
        for result in str.ParseStringToUrls(target) {
            _, bytes := poc.ParseUrlToHTTPRequestRaw("GET", result)~
            caller.MirrorHTTPFlow(str.IsTLSServer(target)~, result, bytes, []byte(""), []byte(""))
        }

        caller.Wait()
    } catch err {
        yakit.Warn("calssical plugin caller failed: %s", err)
    }
}
wg.Wait()

